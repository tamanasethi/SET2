Problem Statement 19 (Aggregation & Indexing)
Create the Collection Movies_Data( Movie_ID, Movie_Name, Director, Genre, BoxOfficeCollection) and
solve the following:

1. Display a list stating how many Movies are directed by each “Director”.
2. Display list of Movies with the highest BoxOfficeCollection in each Genre.
3. Display list of Movies with the highest BoxOfficeCollection in each Genre in ascending order
of BoxOfficeCollection.
4. Create an index on field Movie_ID.
5. Create an index on fields ” Movie_Name” and ” Director”.
6. Drop an index on field Movie_ID.
7. Drop an index on fields ” Movie_Name” and ” Director”.

// Create Movies_Data collection with sample documents
db.createCollection("Movies_Data");

db.Movies_Data.insertMany([
    { Movie_ID: 101, Movie_Name: "Dangal", Director: "Nitesh Tiwari", Genre: "Drama", BoxOfficeCollection: 1000 },
    { Movie_ID: 102, Movie_Name: "Lagaan", Director: "Ashutosh Gowariker", Genre: "Drama", BoxOfficeCollection: 500 },
    { Movie_ID: 103, Movie_Name: "3 Idiots", Director: "Rajkumar Hirani", Genre: "Comedy", BoxOfficeCollection: 1200 },
    { Movie_ID: 104, Movie_Name: "PK", Director: "Rajkumar Hirani", Genre: "Comedy", BoxOfficeCollection: 800 },
    { Movie_ID: 105, Movie_Name: "Jab Tak Hai Jaan", Director: "Yash Chopra", Genre: "Romance", BoxOfficeCollection: 600 },
    { Movie_ID: 106, Movie_Name: "Kabhi Khushi Kabhie Gham", Director: "Karan Johar", Genre: "Drama", BoxOfficeCollection: 850 }
]);

db.Movies_Data.aggregate([
    { $group: { _id: "$Director", Movie_Count: { $sum: 1 } } }
]);

db.Movies_Data.aggregate([
    { $sort: { BoxOfficeCollection: -1 } },
    { $group: { _id: "$Genre", Movie_Name: { $first: "$Movie_Name" }, Director: { $first: "$Director" }, BoxOfficeCollection: { $first: "$BoxOfficeCollection" } } }
]);

db.Movies_Data.aggregate([
    { $sort: { BoxOfficeCollection: -1 } },
    { $group: { _id: "$Genre", Movie_Name: { $first: "$Movie_Name" }, Director: { $first: "$Director" }, BoxOfficeCollection: { $first: "$BoxOfficeCollection" } } },
    { $sort: { BoxOfficeCollection: 1 } }
]);

db.Movies_Data.createIndex({ Movie_ID: 1 });

db.Movies_Data.createIndex({ Movie_Name: 1, Director: 1 });


// Drop index on Movie_ID field
db.Movies_Data.dropIndex("Movie_ID_1");

db.Movies_Data.getIndexes();

// Drop the compound index on Movie_Name and Director
db.Movies_Data.dropIndex("Movie_Name_1_Director_1");
